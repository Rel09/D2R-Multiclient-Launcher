name: MSBuild-D2RLauncher

on:
  push:
    branches: ["master"]

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '17.12'

      - name: Set Windows SDK Paths
        shell: pwsh
        run: |
          echo "LIB=C:\Program Files (x86)\Windows Kits\10\Lib\10.0.26100.0\um\x64" >> $env:GITHUB_ENV
          echo "INCLUDE=C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\um;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\shared;C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt" >> $env:GITHUB_ENV

      - name: Retrieve and Increment Version
        shell: pwsh
        run: |
          $latestTag = git describe --tags --abbrev=0 2>$null
          if (-not $latestTag -or $latestTag -notmatch '^v(\d+)\.(\d+)$') {
              $major = 1
              $minor = 0
          } else {
              $major = [int]$matches[1]
              $minor = [int]$matches[2] + 1
          }
          $newVersion = "$major.$minor"
          echo "VERSION=$newVersion" >> $env:GITHUB_ENV

      - name: Restore and Build
        shell: cmd
        run: |
          nuget restore %SOLUTION_FILE_PATH%
          msbuild /m /p:Configuration=%BUILD_CONFIGURATION% /p:Platform=x64 /p:MyVersion=%VERSION% %SOLUTION_FILE_PATH%

      - name: Download handle64.exe
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri "https://download.sysinternals.com/files/Handle.zip" -OutFile "Handle.zip"
          Expand-Archive -Path "Handle.zip" -DestinationPath "handle_temp"
          mkdir "x64\${{ env.BUILD_CONFIGURATION }}" -Force
          Move-Item -Path "handle_temp\handle64.exe" -Destination "x64\${{ env.BUILD_CONFIGURATION }}\handle64.exe" -Force

      - name: Package and Release
        shell: pwsh
        run: |
          mkdir "dist\D2RLauncher" -Force
          Copy-Item -Path "x64\${{ env.BUILD_CONFIGURATION }}\D2RLauncher.exe" -Destination "dist\D2RLauncher\" -Force
          Copy-Item -Path "x64\${{ env.BUILD_CONFIGURATION }}\handle64.exe" -Destination "dist\D2RLauncher\" -Force
          $zipName = "D2RLauncher-${{ env.VERSION }}.zip"
          Compress-Archive -Path "dist\D2RLauncher" -DestinationPath $zipName
          echo "RELEASE_FILE=$zipName" >> $env:GITHUB_ENV
          $absoluteZipPath = Join-Path (Get-Location) $zipName
          echo "ABSOLUTE_RELEASE_FILE=$absoluteZipPath" >> $env:GITHUB_ENV

      - name: Tag the New Version
        shell: pwsh
        run: |
          git config user.name $env:GITHUB_ACTOR
          git config user.email "<>"
          git tag "v${{ env.VERSION }}"
          git push origin "v${{ env.VERSION }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.RELEASE_FILE }}
          tag_name: "v${{ env.VERSION }}"
          name: "Version ${{ env.VERSION }}"
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
